#!/usr/bin/env bash

#### Emoji Function
emojiFunction() {
  for i in {1..95}; do
    printf "$1"
  done
  printf '\n'
}

time_stamp="$(date +'%d-%m-%Y-%r')"
echo "Scanning local docker image $1/$2:$3 at: ${time_stamp}"
#### The real game starts here
docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
-v $HOME/Library/Caches:/root/.cache/ aquasec/trivy $1/$2:$3 > "vulnerability-report-${time_stamp}".txt

critical_vulnerability=$(grep CRITICAL: "vulnerability-report-${time_stamp}".txt | sed -n -e 's/^.*CRITICAL: //p' | cut -c1-1)
high_vulnerability=$(grep CRITICAL: "vulnerability-report-${time_stamp}".txt | sed -n -e 's/^.*HIGH: //p' | cut -c1-1)

#### Check if the report has Critical or High Vulnerability
scan_status=$(grep Total: "vulnerability-report-${time_stamp}".txt)
if [[ "${critical_vulnerability}" != "0" || "${high_vulnerability}" != "0" ]]; then
  printf "\033[91m\033[1m\n"
  emojiFunction "\xE2\x98\xA0"
  echo "Critical or High Vulnerabilities Identified review the attached report."
  echo "Scan status : ${scan_status}"
  echo "Fix the vulnerabilities to proceed with the deployment."
  emojiFunction "\xE2\x98\xA0"
  exit 1
else
  printf "\033[92m"
  emojiFunction "\xE2\x99\xA0"
  echo "Everything is good."
  echo "Scan status : ${scan_status}"
  echo "No Critical and High Vulnerabilities Identified, review full list of other vulnerabilities identified."
  emojiFunction "\xE2\x99\xA0"
  echo -e "\033[0m"
fi
rm -f "vulnerability-report-${time_stamp}".txt